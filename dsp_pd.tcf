/*
 *  Copyright 2008 by Texas Instruments Incorporated.
 *  All rights reserved. Property of Texas Instruments Incorporated.
 *  Restricted rights to use, duplicate or disclose this code are
 *  granted through contract.
 *
 *  @(#) dvsdk_1_11_00_00 1.11.00.00 061808 (biosdvsdk-c00x)
 */
/*
 *  ======== video_encdec.tcf ========
 *
 */

/* Load the evmDM6437 platform memory map.  */
utils.loadPlatform("ti.platforms.evmDM6437");


/*
 * workaround for SDSCM00017022 -- force .cio section at top of DDR2
 * to avoid prefetch of code into .cio which causes problems for CCS
 * standard I/O support.  This issue was fixed in a CCS service release

 */
//var CIO = bios.MEM.create("CIO");
//CIO.base = bios.MEM.instance("DDR2").base;
//CIO.len = 0x120;

 

bios.MEM.instance("DDR2").base = bios.MEM.instance("DDR2").base + 0x120;
bios.MEM.instance("DDR2").len = bios.MEM.instance("DDR2").len - 0x120;

 

//bios.MEM.CIOSEG = prog.get("CIO");


/* Import settings common to all DM6437 DVSDK examples. */
utils.importFile("common.tci");

/* PSP configuration */

/* Enable ECM Handler */
bios.ECM.ENABLE = 1;

/* ECM configuration - manually Reflect these settings in soc.h */
bios.HWI.instance("HWI_INT7").interruptSelectNumber = 0;
bios.HWI.instance("HWI_INT8").interruptSelectNumber = 1;
bios.HWI.instance("HWI_INT9").interruptSelectNumber = 2;
bios.HWI.instance("HWI_INT10").interruptSelectNumber = 3;

/* Create user devices for I2C (needed by video) and video drivers */
bios.UDEV.create("I2C0");
bios.UDEV.instance("I2C0").fxnTableType = "IOM_Fxns";
bios.UDEV.instance("I2C0").params = prog.extern("I2C_devParams");
bios.UDEV.instance("I2C0").fxnTable = prog.extern("I2CMD_FXNS");

/* Capture driver: */
bios.UDEV.create("VPFE0");
bios.UDEV.instance("VPFE0").fxnTable = prog.extern("VPFEMD_FXNS");
bios.UDEV.instance("VPFE0").fxnTableType = "IOM_Fxns";

/* Display driver: */
bios.UDEV.create("VPBE0");
bios.UDEV.instance("VPBE0").fxnTable = prog.extern("VPBEMD_FXNS");
bios.UDEV.instance("VPBE0").fxnTableType = "IOM_Fxns";

bios.UDEV.create("resizer");
bios.UDEV.instance("resizer").fxnTable = prog.extern("RSZMD_FXNS");
bios.UDEV.instance("resizer").fxnTableType = "IOM_Fxns";


if (config.hasReportedError == false) {
bios.TSK.STACKSEG = prog.get("MEM_NULL");
bios.TSK.STACKSEG = prog.get("DDR2");
bios.MEM.TRCDATASEG = prog.get("DDR2");
bios.MEM.instance("CACHE_L2").space = "code/data";
bios.MEM.instance("CACHE_L2").createHeap = 1;
bios.MEM.instance("CACHE_L2").enableHeapLabel = 1;
bios.MEM.instance("CACHE_L2").heapLabel = prog.extern("myMem", "asm");
bios.MEM.ENABLELOADADDR = 1;
bios.MEM.LOADTEXTSEG = prog.get("CACHE_L2");
bios.MEM.TEXTSEG = prog.get("CACHE_L2");
bios.MEM.TEXTSEG = prog.get("DDR2");
bios.MEM.LOADTEXTSEG = prog.get("DDR2");
bios.MEM.instance("CACHE_L1D").base = 0x10f10000;
bios.MEM.instance("CACHE_L1D").len = 0x00008000;
bios.MEM.instance("CACHE_L1D").base = 0x10f14000;
bios.MEM.instance("CACHE_L1D").len = 0x00004000;
bios.MEM.instance("DDR2").base = 0x80000100;
bios.MEM.instance("DDR2").base = 0x80000000;
bios.MEM.instance("DDR2").base = 0x80000120;
bios.MEM.BSSSEG = prog.get("L1DSRAM");
bios.MEM.BSSSEG = prog.get("DDR2");
bios.MEM.DATASEG = prog.get("CACHE_L2");
bios.MEM.DATASEG = prog.get("DDR2");
// !GRAPHICAL_CONFIG_TOOL_SCRIPT_INSERT_POINT!
    prog.gen();
}

